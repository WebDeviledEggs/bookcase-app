# Generated by Django 4.2.7 on 2025-08-24 20:10

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('open_library_id', models.CharField(max_length=50, unique=True)),
                ('isbn_10', models.CharField(blank=True, max_length=10, null=True)),
                ('isbn_13', models.CharField(blank=True, max_length=13, null=True)),
                ('title', models.CharField(max_length=500)),
                ('authors', models.JSONField(default=list)),
                ('description', models.TextField(blank=True, null=True)),
                ('publisher', models.CharField(blank=True, max_length=200, null=True)),
                ('publish_date', models.CharField(blank=True, max_length=50, null=True)),
                ('pages', models.IntegerField(blank=True, null=True)),
                ('genres', models.JSONField(default=list)),
                ('language', models.CharField(default='en', max_length=10)),
                ('cover_url', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='UserBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('tbr', 'To Be Read'), ('reading', 'Currently Reading'), ('finished', 'Finished'), ('dnf', 'Did Not Finish')], default='tbr', max_length=10)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_started', models.DateTimeField(blank=True, null=True)),
                ('date_finished', models.DateTimeField(blank=True, null=True)),
                ('current_page', models.IntegerField(default=0)),
                ('notes', models.TextField(blank=True, null=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='books.book')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date_added'],
                'unique_together': {('user', 'book')},
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating_type', models.CharField(choices=[('overall', 'Overall'), ('enjoyment', 'Enjoyment'), ('critique', 'Critique'), ('plot', 'Plot'), ('character', 'Character Development'), ('setting', 'Setting/World Building'), ('theme', 'Themes'), ('prose', 'Prose/Writing Style')], max_length=20)),
                ('rating', models.DecimalField(decimal_places=1, max_digits=2, validators=[django.core.validators.MinValueValidator(0.5), django.core.validators.MaxValueValidator(5.0)])),
                ('review', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='books.book')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['rating_type'],
                'unique_together': {('user', 'book', 'rating_type')},
            },
        ),
    ]
